datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(ARTIST)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       Profile?
  musicReleases Music[]
  videoReleases Video[]
  subscription  Subscription?
}

model Profile {
  id            String    @id @default(cuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @unique
  bio           String?
  website       String?
  socialMedia   Json?
  avatarUrl     String?
}

model Music {
  id            String    @id @default(cuid())
  title         String
  artist        User      @relation(fields: [artistId], references: [id])
  artistId      String
  audioFile     String
  coverArt      String
  isrc          String    @unique
  genre         String
  releaseDate   DateTime
  status        ReleaseStatus @default(PENDING)
  streams       Int       @default(0)
  revenue       Float     @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Video {
  id            String    @id @default(cuid())
  title         String
  artist        User      @relation(fields: [artistId], references: [id])
  artistId      String
  videoFile     String
  thumbnail     String
  isrc          String    @unique
  genre         String
  releaseDate   DateTime
  status        ReleaseStatus @default(PENDING)
  views         Int       @default(0)
  revenue       Float     @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Subscription {
  id            String    @id @default(cuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @unique
  plan          Plan
  startDate     DateTime  @default(now())
  endDate       DateTime?
  amount        Float
}

model AdminSettings {
  id            String    @id @default(cuid())
  settingKey    String    @unique
  settingValue  String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum Role {
  ARTIST
  LABEL
  ADMIN
}

enum ReleaseStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Plan {
  FREE
  PRO
  ENTERPRISE
}

